version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/israel_kitchen
      - NEXTAUTH_SECRET=your_nextauth_secret_key
      - NEXTAUTH_URL=http://localhost:3000
      - GOOGLE_CLIENT_ID=your_google_client_id
      - GOOGLE_CLIENT_SECRET=your_google_client_secret
      - STRIPE_SECRET_KEY=sk_test_...
      - STRIPE_WEBHOOK_SECRET=whsec_...
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_...
      - UPLOADTHING_SECRET=sk_live_...
      - UPLOADTHING_APP_ID=your_uploadthing_app_id
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://0.0.0.0:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=israel_kitchen
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: 